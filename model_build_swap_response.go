/*
AVNU API

REST API documentation for accessing liquidity on Layer 2.  AVNU is a decentralized exchange protocol enabling the fastest and the most efficient operations in DeFi for Layer 2 with better pricing, zero slippage, MEV-protection and gasless trading.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BuildSwapResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BuildSwapResponse{}

// BuildSwapResponse struct for BuildSwapResponse
type BuildSwapResponse struct {
	// The chain's id
	ChainId string `json:"chainId"`
	// The address of the contract to send call data to
	ContractAddress string `json:"contractAddress"`
	// The entrypoint
	Entrypoint string `json:"entrypoint"`
	// The call data required to be sent to the to contract address
	Calldata []string `json:"calldata"`
}

type _BuildSwapResponse BuildSwapResponse

// NewBuildSwapResponse instantiates a new BuildSwapResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildSwapResponse(chainId string, contractAddress string, entrypoint string, calldata []string) *BuildSwapResponse {
	this := BuildSwapResponse{}
	this.ChainId = chainId
	this.ContractAddress = contractAddress
	this.Entrypoint = entrypoint
	this.Calldata = calldata
	return &this
}

// NewBuildSwapResponseWithDefaults instantiates a new BuildSwapResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildSwapResponseWithDefaults() *BuildSwapResponse {
	this := BuildSwapResponse{}
	return &this
}

// GetChainId returns the ChainId field value
func (o *BuildSwapResponse) GetChainId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value
// and a boolean to check if the value has been set.
func (o *BuildSwapResponse) GetChainIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainId, true
}

// SetChainId sets field value
func (o *BuildSwapResponse) SetChainId(v string) {
	o.ChainId = v
}

// GetContractAddress returns the ContractAddress field value
func (o *BuildSwapResponse) GetContractAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value
// and a boolean to check if the value has been set.
func (o *BuildSwapResponse) GetContractAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractAddress, true
}

// SetContractAddress sets field value
func (o *BuildSwapResponse) SetContractAddress(v string) {
	o.ContractAddress = v
}

// GetEntrypoint returns the Entrypoint field value
func (o *BuildSwapResponse) GetEntrypoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Entrypoint
}

// GetEntrypointOk returns a tuple with the Entrypoint field value
// and a boolean to check if the value has been set.
func (o *BuildSwapResponse) GetEntrypointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entrypoint, true
}

// SetEntrypoint sets field value
func (o *BuildSwapResponse) SetEntrypoint(v string) {
	o.Entrypoint = v
}

// GetCalldata returns the Calldata field value
func (o *BuildSwapResponse) GetCalldata() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Calldata
}

// GetCalldataOk returns a tuple with the Calldata field value
// and a boolean to check if the value has been set.
func (o *BuildSwapResponse) GetCalldataOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Calldata, true
}

// SetCalldata sets field value
func (o *BuildSwapResponse) SetCalldata(v []string) {
	o.Calldata = v
}

func (o BuildSwapResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuildSwapResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["chainId"] = o.ChainId
	toSerialize["contractAddress"] = o.ContractAddress
	toSerialize["entrypoint"] = o.Entrypoint
	toSerialize["calldata"] = o.Calldata
	return toSerialize, nil
}

func (o *BuildSwapResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"chainId",
		"contractAddress",
		"entrypoint",
		"calldata",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBuildSwapResponse := _BuildSwapResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBuildSwapResponse)

	if err != nil {
		return err
	}

	*o = BuildSwapResponse(varBuildSwapResponse)

	return err
}

type NullableBuildSwapResponse struct {
	value *BuildSwapResponse
	isSet bool
}

func (v NullableBuildSwapResponse) Get() *BuildSwapResponse {
	return v.value
}

func (v *NullableBuildSwapResponse) Set(val *BuildSwapResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildSwapResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildSwapResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildSwapResponse(val *BuildSwapResponse) *NullableBuildSwapResponse {
	return &NullableBuildSwapResponse{value: val, isSet: true}
}

func (v NullableBuildSwapResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildSwapResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


